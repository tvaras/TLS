//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WEB_TLS.ProyectosServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProyectosServiceReference.ISRV_Proyecto")]
    public interface ISRV_Proyecto {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISRV_Proyecto/CrearProyecto", ReplyAction="http://tempuri.org/ISRV_Proyecto/CrearProyectoResponse")]
        TLS_Entidades.ResultadoDTO CrearProyecto(string nombreP, System.DateTime fechaC, bool activo, int idUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISRV_Proyecto/CrearProyecto", ReplyAction="http://tempuri.org/ISRV_Proyecto/CrearProyectoResponse")]
        System.Threading.Tasks.Task<TLS_Entidades.ResultadoDTO> CrearProyectoAsync(string nombreP, System.DateTime fechaC, bool activo, int idUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISRV_Proyecto/CrearNuevoProyecto", ReplyAction="http://tempuri.org/ISRV_Proyecto/CrearNuevoProyectoResponse")]
        TLS_Entidades.ResultadoDTO CrearNuevoProyecto(string nombreP, System.DateTime fechaC, bool activo, int idUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISRV_Proyecto/CrearNuevoProyecto", ReplyAction="http://tempuri.org/ISRV_Proyecto/CrearNuevoProyectoResponse")]
        System.Threading.Tasks.Task<TLS_Entidades.ResultadoDTO> CrearNuevoProyectoAsync(string nombreP, System.DateTime fechaC, bool activo, int idUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISRV_Proyecto/listarProyectos", ReplyAction="http://tempuri.org/ISRV_Proyecto/listarProyectosResponse")]
        System.Collections.Generic.List<TLS_Entidades.ProyectoDTO> listarProyectos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISRV_Proyecto/listarProyectos", ReplyAction="http://tempuri.org/ISRV_Proyecto/listarProyectosResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<TLS_Entidades.ProyectoDTO>> listarProyectosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISRV_Proyecto/listarUsuariosNoAsignados", ReplyAction="http://tempuri.org/ISRV_Proyecto/listarUsuariosNoAsignadosResponse")]
        System.Collections.Generic.List<TLS_Entidades.UsuarioDTO> listarUsuariosNoAsignados(int idProyecto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISRV_Proyecto/listarUsuariosNoAsignados", ReplyAction="http://tempuri.org/ISRV_Proyecto/listarUsuariosNoAsignadosResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<TLS_Entidades.UsuarioDTO>> listarUsuariosNoAsignadosAsync(int idProyecto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISRV_Proyecto/asignarParticipante", ReplyAction="http://tempuri.org/ISRV_Proyecto/asignarParticipanteResponse")]
        bool asignarParticipante(TLS_Entidades.ParticipanteDTO dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISRV_Proyecto/asignarParticipante", ReplyAction="http://tempuri.org/ISRV_Proyecto/asignarParticipanteResponse")]
        System.Threading.Tasks.Task<bool> asignarParticipanteAsync(TLS_Entidades.ParticipanteDTO dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISRV_Proyecto/listarParticipantesAsignados", ReplyAction="http://tempuri.org/ISRV_Proyecto/listarParticipantesAsignadosResponse")]
        System.Collections.Generic.List<TLS_Entidades.ParticipanteDTO> listarParticipantesAsignados(int idProyecto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISRV_Proyecto/listarParticipantesAsignados", ReplyAction="http://tempuri.org/ISRV_Proyecto/listarParticipantesAsignadosResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<TLS_Entidades.ParticipanteDTO>> listarParticipantesAsignadosAsync(int idProyecto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISRV_Proyecto/eliminarParticipante", ReplyAction="http://tempuri.org/ISRV_Proyecto/eliminarParticipanteResponse")]
        bool eliminarParticipante(int idParticipante);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISRV_Proyecto/eliminarParticipante", ReplyAction="http://tempuri.org/ISRV_Proyecto/eliminarParticipanteResponse")]
        System.Threading.Tasks.Task<bool> eliminarParticipanteAsync(int idParticipante);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISRV_ProyectoChannel : WEB_TLS.ProyectosServiceReference.ISRV_Proyecto, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SRV_ProyectoClient : System.ServiceModel.ClientBase<WEB_TLS.ProyectosServiceReference.ISRV_Proyecto>, WEB_TLS.ProyectosServiceReference.ISRV_Proyecto {
        
        public SRV_ProyectoClient() {
        }
        
        public SRV_ProyectoClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SRV_ProyectoClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SRV_ProyectoClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SRV_ProyectoClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TLS_Entidades.ResultadoDTO CrearProyecto(string nombreP, System.DateTime fechaC, bool activo, int idUsuario) {
            return base.Channel.CrearProyecto(nombreP, fechaC, activo, idUsuario);
        }
        
        public System.Threading.Tasks.Task<TLS_Entidades.ResultadoDTO> CrearProyectoAsync(string nombreP, System.DateTime fechaC, bool activo, int idUsuario) {
            return base.Channel.CrearProyectoAsync(nombreP, fechaC, activo, idUsuario);
        }
        
        public TLS_Entidades.ResultadoDTO CrearNuevoProyecto(string nombreP, System.DateTime fechaC, bool activo, int idUsuario) {
            return base.Channel.CrearNuevoProyecto(nombreP, fechaC, activo, idUsuario);
        }
        
        public System.Threading.Tasks.Task<TLS_Entidades.ResultadoDTO> CrearNuevoProyectoAsync(string nombreP, System.DateTime fechaC, bool activo, int idUsuario) {
            return base.Channel.CrearNuevoProyectoAsync(nombreP, fechaC, activo, idUsuario);
        }
        
        public System.Collections.Generic.List<TLS_Entidades.ProyectoDTO> listarProyectos() {
            return base.Channel.listarProyectos();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<TLS_Entidades.ProyectoDTO>> listarProyectosAsync() {
            return base.Channel.listarProyectosAsync();
        }
        
        public System.Collections.Generic.List<TLS_Entidades.UsuarioDTO> listarUsuariosNoAsignados(int idProyecto) {
            return base.Channel.listarUsuariosNoAsignados(idProyecto);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<TLS_Entidades.UsuarioDTO>> listarUsuariosNoAsignadosAsync(int idProyecto) {
            return base.Channel.listarUsuariosNoAsignadosAsync(idProyecto);
        }
        
        public bool asignarParticipante(TLS_Entidades.ParticipanteDTO dto) {
            return base.Channel.asignarParticipante(dto);
        }
        
        public System.Threading.Tasks.Task<bool> asignarParticipanteAsync(TLS_Entidades.ParticipanteDTO dto) {
            return base.Channel.asignarParticipanteAsync(dto);
        }
        
        public System.Collections.Generic.List<TLS_Entidades.ParticipanteDTO> listarParticipantesAsignados(int idProyecto) {
            return base.Channel.listarParticipantesAsignados(idProyecto);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<TLS_Entidades.ParticipanteDTO>> listarParticipantesAsignadosAsync(int idProyecto) {
            return base.Channel.listarParticipantesAsignadosAsync(idProyecto);
        }
        
        public bool eliminarParticipante(int idParticipante) {
            return base.Channel.eliminarParticipante(idParticipante);
        }
        
        public System.Threading.Tasks.Task<bool> eliminarParticipanteAsync(int idParticipante) {
            return base.Channel.eliminarParticipanteAsync(idParticipante);
        }
    }
}
